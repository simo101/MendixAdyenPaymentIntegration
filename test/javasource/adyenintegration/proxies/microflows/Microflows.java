// This file was generated by Mendix Business Modeler 5.0.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package adyenintegration.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the AdyenIntegration module

	public static void aSU_Create_ConfirmationDeeplink(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			Core.execute(context, "AdyenIntegration.ASU_Create_ConfirmationDeeplink", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void confirmationMicroflow(IContext context, String _merchantReference, String _skinCode, String _shopperLocale, String _pspReference, String _merchantSig, String _authResult, String _merchantReturnData, String _paymentMethod)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("merchantReference", _merchantReference);
			params.put("skinCode", _skinCode);
			params.put("shopperLocale", _shopperLocale);
			params.put("pspReference", _pspReference);
			params.put("merchantSig", _merchantSig);
			params.put("authResult", _authResult);
			params.put("merchantReturnData", _merchantReturnData);
			params.put("paymentMethod", _paymentMethod);
			Core.execute(context, "AdyenIntegration.ConfirmationMicroflow", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static adyenintegration.proxies.PaymentSettings gET_Settings(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "AdyenIntegration.GET_Settings", params);
			return result == null ? null : adyenintegration.proxies.PaymentSettings.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static administration.proxies.Account getCurrentAccount(IContext context)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			IMendixObject result = (IMendixObject)Core.execute(context, "AdyenIntegration.GetCurrentAccount", params);
			return result == null ? null : administration.proxies.Account.initialize(context, result);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}

	public static void testPayment(IContext context, adyenintegration.proxies.Payment _paymentPage)
	{
		try
		{
			Map<String, Object> params = new HashMap<String, Object>();
			params.put("PaymentPage", _paymentPage == null ? null : _paymentPage.getMendixObject());
			Core.execute(context, "AdyenIntegration.TestPayment", params);
		}
		catch (CoreException e)
		{
			throw new MendixRuntimeException(e);
		}
	}
}