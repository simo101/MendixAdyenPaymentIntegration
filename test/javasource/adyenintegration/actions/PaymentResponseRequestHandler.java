// This file was generated by Mendix Business Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package adyenintegration.actions;

import java.util.List;
import javax.servlet.http.HttpServletResponse;
import adyenintegration.proxies.Confirmation;
import adyenintegration.proxies.microflows.Microflows;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.externalinterface.connector.RequestHandler;
import com.mendix.m2ee.api.IMxRuntimeRequest;
import com.mendix.m2ee.api.IMxRuntimeResponse;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.ISession;
import com.mendix.webui.CustomJavaAction;
import deeplink.actions.StartDeeplinkJava;
import deeplink.proxies.DeepLink;
import deeplink.proxies.PendingLink;

/**
 * 
 */
public class PaymentResponseRequestHandler extends CustomJavaAction<Boolean>
{
	private String HandlerName;

	public PaymentResponseRequestHandler(IContext context, String HandlerName)
	{
		super(context);
		this.HandlerName = HandlerName;
	}

	@Override
	public Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		Core.addRequestHandler(HandlerName, new paymentHandler());
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "PaymentResponseRequestHandler";
	}

	// BEGIN EXTRA CODE
	
	public class paymentHandler extends RequestHandler {
		private static final String	DEFAULT_INDEX_LOCATION	= "index.html";

		@Override
		public void processRequest(IMxRuntimeRequest request,
				IMxRuntimeResponse response, String arg2) throws Exception {
			
			String merchantReference = request.getParameter("merchantReference");
			String skinCode = request.getParameter("skinCode");
			String shopperLocale = request.getParameter("shopperLocale");
			String pspReference = request.getParameter("pspReference");
			String merchantSig = request.getParameter("merchantSig");
			String authResult = request.getParameter("authResult");
			String merchantReturnData = request.getParameter("merchantReturnData");

			IContext context = Core.createSystemContext();
			
			Confirmation confirm = Confirmation.initialize(context, Core.instantiate(context, Confirmation.entityName));
			
			
			confirm.setmerchantReference(merchantReference);
			confirm.setskinCode(skinCode);
			confirm.setshopperLocale(shopperLocale);
			confirm.setpspReference(pspReference);
			confirm.setmerchantSig(merchantSig);
			confirm.setauthResult(authResult);
			confirm.setmerchantReturnData(merchantReturnData);
			
			confirm.commit();
			

			response.setStatus(HttpServletResponse.SC_SEE_OTHER);
			
			response.addHeader("location", getRelPath(request) + DEFAULT_INDEX_LOCATION);
			
		}
		private String getRelPath(IMxRuntimeRequest request) {
			String res = "";
			int length = request.getResourcePath().split("/").length +
				(request.getResourcePath().endsWith("/") ? 0 : -1);
			for(int i1 = 0; i1 < length; i1++)
				res+= "../";
			return res;
		}
	}
	// END EXTRA CODE
}
